@use 'variables';

:root {
	// Styles match https://github.com/catppuccin/sublime-text/tree/3cbaf58c39d1b1fddb8d7d816ecd71977e542b7d
	--syntax-color: #{variables.$latte-text};
	--syntax-background-color: #{variables.$latte-base};
	--syntax-comment: #{variables.$latte-overlay-2};
	--syntax-shebang: #{variables.$latte-pink};
	--syntax-string: #{variables.$latte-green};
	--syntax-string-regexp: #{variables.$latte-pink};
	--syntax-numeric: #{variables.$latte-peach};
	--syntax-boolean: #{variables.$latte-peach};
	--syntax-built-in-constant: #{variables.$latte-peach};
	--syntax-built-in-function: #{variables.$latte-peach};
	--syntax-user-defined-constant: #{variables.$latte-peach};
	--syntax-symbol: #{variables.$latte-red};
	--syntax-keyword: #{variables.$latte-mauve};
	--syntax-conditional-or-loop: #{variables.$latte-mauve};
	--syntax-return: #{variables.$latte-mauve};
	--syntax-variable-declaration: #{variables.$latte-mauve};
	--syntax-class-declaration: #{variables.$latte-mauve};
	--syntax-function-declaration: #{variables.$latte-mauve};
	--syntax-c-plus-plus-directive: #{variables.$latte-yellow};
	--syntax-c-sharp-type-or-variable-declaration-keywords: #{variables.$latte-mauve};
	--syntax-exception: #{variables.$latte-peach};
	--syntax-keyword-operator: #{variables.$latte-mauve};
	--syntax-operator: #{variables.$latte-teal};
	--syntax-punctuation-separator: #{variables.$latte-overlay-2};
	--syntax-punctuation-terminator: #{variables.$latte-overlay-2};
	--syntax-punctuation-bracket: #{variables.$latte-overlay-2};
	--syntax-import-or-include: #{variables.$latte-mauve};
	--syntax-storage: #{variables.$latte-red};
	--syntax-storage-type: #{variables.$latte-yellow};
	--syntax-storage-modifier: #{variables.$latte-mauve};
	--syntax-storage-type-namespace: #{variables.$latte-yellow};
	--syntax-storage-type-class: #{variables.$latte-rosewater};
	--syntax-label: #{variables.$latte-blue};
	--syntax-class-name: #{variables.$latte-yellow};
	--syntax-function-name: #{variables.$latte-blue};
	--syntax-function-macro: #{variables.$latte-red};
	--syntax-library-constant: #{variables.$latte-blue};
	--syntax-class-or-type-identifier: #{variables.$latte-yellow};
	--syntax-builtin-type: #{variables.$latte-mauve};
	--syntax-library-variable: #{variables.$latte-text};
	--syntax-unquoted-keys: #{variables.$latte-text};
	--syntax-variable-parameter: #{variables.$latte-maroon};
	--syntax-variable-field: #{variables.$latte-text};
	--syntax-variable-language-bultin: #{variables.$latte-red};
	--syntax-annotation-decorator: #{variables.$latte-peach};
	--syntax-c-or-rust-attribute: #{variables.$latte-yellow};
	--syntax-python-variable-identifier: #{variables.$latte-text};
	--syntax-python-docstring: #{variables.$latte-green};
	--syntax-tag-name: #{variables.$latte-blue};
	--syntax-tag-attribute: #{variables.$latte-yellow};
	--syntax-tag-delimiters-and-attribute-key-or-value-separators: #{variables.$latte-teal};
	--syntax-markdown-url: #{variables.$latte-blue};
	--syntax-markdown-reference: #{variables.$latte-lavender};
	--syntax-markdown-raw-code: #{variables.$latte-text};
	--syntax-markdown-inline-code: #{variables.$latte-green};
	--syntax-markdown-code-fence-definition: #{variables.$latte-overlay-2};
	--syntax-markdown-code-fence-definition-language: #{variables.$latte-sky};
	--syntax-markdown-heading-1: #{variables.$latte-red};
	--syntax-markdown-heading-2: #{variables.$latte-peach};
	--syntax-markdown-heading-3: #{variables.$latte-yellow};
	--syntax-markdown-heading-4: #{variables.$latte-green};
	--syntax-markdown-heading-5: #{variables.$latte-sapphire};
	--syntax-markdown-heading-6: #{variables.$latte-lavender};
	--syntax-markdown-emphasis: #{variables.$latte-maroon};
	--syntax-markdown-strong: #{variables.$latte-maroon};
	--syntax-escape: #{variables.$latte-pink};
	--syntax-bash-builtin-function: #{variables.$latte-red};
	--syntax-bash-parameter: #{variables.$latte-red};
	--syntax-lua-field: #{variables.$latte-lavender};
	--syntax-lua-constructor: #{variables.$latte-flamingo};
	--syntax-java-constant: #{variables.$latte-teal};
	--syntax-java-void-keyword: #{variables.$latte-mauve};
	--syntax-css-property: #{variables.$latte-blue};
	--syntax-css-property-vendor-prefix: #{variables.$latte-sky};
	--syntax-css-variable-usage: #{variables.$latte-maroon};
	--syntax-css-var-function: #{variables.$latte-blue};
	--syntax-css-constant: #{variables.$latte-text};
	--syntax-css-unit-suffix: #{variables.$latte-mauve};
	--syntax-scss-tag: #{variables.$latte-lavender};
	--syntax-sass-or-scss-variable: #{variables.$latte-maroon};
	--syntax-scss-mixin: #{variables.$latte-blue};
	--syntax-rust-macro: #{variables.$latte-blue};
	--syntax-rust-macro-definition-parameters: #{variables.$latte-pink};
	--syntax-generic-or-type-parameter-angle-brackets: #{variables.$latte-teal};
	--syntax-invalid: #{variables.$latte-text};
	--syntax-invalid-background: #{variables.$latte-red};
	--syntax-invalid-deprecated: #{variables.$latte-text};
	--syntax-invalid-deprecated-background: #{variables.$latte-mauve};
	--syntax-diff-header: #{variables.$latte-overlay-1};
	--syntax-diff-deleted: #{variables.$latte-red};
	--syntax-diff-inserted: #{variables.$latte-green};
	--syntax-diff-changed: #{variables.$latte-yellow};
	--syntax-message-error: #{variables.$latte-red};
	--syntax-json-keys: #{variables.$latte-blue};
	--syntax-json-key-surrounding-quotes: #{variables.$latte-overlay-2};
	--syntax-yaml-unquoted-keys: #{variables.$latte-blue};
	--syntax-yaml-anchor-or-reference: #{variables.$latte-yellow};
	--syntax-python-double-underscore-functions: #{variables.$latte-sky};
	--syntax-javadoc-or-jsdoc: #{variables.$latte-mauve};
	--syntax-toml-datetime: #{variables.$latte-pink};
	--syntax-toml-table-name: #{variables.$latte-yellow};

	@media (prefers-color-scheme: dark) {
		--syntax-color: #{variables.$mocha-text};
		--syntax-background-color: #{variables.$mocha-base};
		--syntax-comment: #{variables.$mocha-overlay-2};
		--syntax-shebang: #{variables.$mocha-pink};
		--syntax-string: #{variables.$mocha-green};
		--syntax-string-regexp: #{variables.$mocha-pink};
		--syntax-numeric: #{variables.$mocha-peach};
		--syntax-boolean: #{variables.$mocha-peach};
		--syntax-built-in-constant: #{variables.$mocha-peach};
		--syntax-built-in-function: #{variables.$mocha-peach};
		--syntax-user-defined-constant: #{variables.$mocha-peach};
		--syntax-symbol: #{variables.$mocha-red};
		--syntax-keyword: #{variables.$mocha-mauve};
		--syntax-conditional-or-loop: #{variables.$mocha-mauve};
		--syntax-return: #{variables.$mocha-mauve};
		--syntax-variable-declaration: #{variables.$mocha-mauve};
		--syntax-class-declaration: #{variables.$mocha-mauve};
		--syntax-function-declaration: #{variables.$mocha-mauve};
		--syntax-c-plus-plus-directive: #{variables.$mocha-yellow};
		--syntax-c-sharp-type-or-variable-declaration-keywords: #{variables.$mocha-mauve};
		--syntax-exception: #{variables.$mocha-peach};
		--syntax-keyword-operator: #{variables.$mocha-mauve};
		--syntax-operator: #{variables.$mocha-teal};
		--syntax-punctuation-separator: #{variables.$mocha-overlay-2};
		--syntax-punctuation-terminator: #{variables.$mocha-overlay-2};
		--syntax-punctuation-bracket: #{variables.$mocha-overlay-2};
		--syntax-import-or-include: #{variables.$mocha-mauve};
		--syntax-storage: #{variables.$mocha-red};
		--syntax-storage-type: #{variables.$mocha-yellow};
		--syntax-storage-modifier: #{variables.$mocha-mauve};
		--syntax-storage-type-namespace: #{variables.$mocha-yellow};
		--syntax-storage-type-class: #{variables.$mocha-rosewater};
		--syntax-label: #{variables.$mocha-blue};
		--syntax-class-name: #{variables.$mocha-yellow};
		--syntax-function-name: #{variables.$mocha-blue};
		--syntax-function-macro: #{variables.$mocha-red};
		--syntax-library-constant: #{variables.$mocha-blue};
		--syntax-class-or-type-identifier: #{variables.$mocha-yellow};
		--syntax-builtin-type: #{variables.$mocha-mauve};
		--syntax-library-variable: #{variables.$mocha-text};
		--syntax-unquoted-keys: #{variables.$mocha-text};
		--syntax-variable-parameter: #{variables.$mocha-maroon};
		--syntax-variable-field: #{variables.$mocha-text};
		--syntax-variable-language-bultin: #{variables.$mocha-red};
		--syntax-annotation-decorator: #{variables.$mocha-peach};
		--syntax-c-or-rust-attribute: #{variables.$mocha-yellow};
		--syntax-python-variable-identifier: #{variables.$mocha-text};
		--syntax-python-docstring: #{variables.$mocha-green};
		--syntax-tag-name: #{variables.$mocha-blue};
		--syntax-tag-attribute: #{variables.$mocha-yellow};
		--syntax-tag-delimiters-and-attribute-key-or-value-separators: #{variables.$mocha-teal};
		--syntax-markdown-url: #{variables.$mocha-blue};
		--syntax-markdown-reference: #{variables.$mocha-lavender};
		--syntax-markdown-raw-code: #{variables.$mocha-text};
		--syntax-markdown-inline-code: #{variables.$mocha-green};
		--syntax-markdown-code-fence-definition: #{variables.$mocha-overlay-2};
		--syntax-markdown-code-fence-definition-language: #{variables.$mocha-sky};
		--syntax-markdown-heading-1: #{variables.$mocha-red};
		--syntax-markdown-heading-2: #{variables.$mocha-peach};
		--syntax-markdown-heading-3: #{variables.$mocha-yellow};
		--syntax-markdown-heading-4: #{variables.$mocha-green};
		--syntax-markdown-heading-5: #{variables.$mocha-sapphire};
		--syntax-markdown-heading-6: #{variables.$mocha-lavender};
		--syntax-markdown-emphasis: #{variables.$mocha-maroon};
		--syntax-markdown-strong: #{variables.$mocha-maroon};
		--syntax-escape: #{variables.$mocha-pink};
		--syntax-bash-builtin-function: #{variables.$mocha-red};
		--syntax-bash-parameter: #{variables.$mocha-red};
		--syntax-lua-field: #{variables.$mocha-lavender};
		--syntax-lua-constructor: #{variables.$mocha-flamingo};
		--syntax-java-constant: #{variables.$mocha-teal};
		--syntax-java-void-keyword: #{variables.$mocha-mauve};
		--syntax-css-property: #{variables.$mocha-blue};
		--syntax-css-property-vendor-prefix: #{variables.$mocha-sky};
		--syntax-css-variable-usage: #{variables.$mocha-maroon};
		--syntax-css-var-function: #{variables.$mocha-blue};
		--syntax-css-constant: #{variables.$mocha-text};
		--syntax-css-unit-suffix: #{variables.$mocha-mauve};
		--syntax-scss-tag: #{variables.$mocha-lavender};
		--syntax-sass-or-scss-variable: #{variables.$mocha-maroon};
		--syntax-scss-mixin: #{variables.$mocha-blue};
		--syntax-rust-macro: #{variables.$mocha-blue};
		--syntax-rust-macro-definition-parameters: #{variables.$mocha-pink};
		--syntax-generic-or-type-parameter-angle-brackets: #{variables.$mocha-teal};
		--syntax-invalid: #{variables.$mocha-text};
		--syntax-invalid-background: #{variables.$mocha-red};
		--syntax-invalid-deprecated: #{variables.$mocha-text};
		--syntax-invalid-deprecated-background: #{variables.$mocha-mauve};
		--syntax-diff-header: #{variables.$mocha-overlay-1};
		--syntax-diff-deleted: #{variables.$mocha-red};
		--syntax-diff-inserted: #{variables.$mocha-green};
		--syntax-diff-changed: #{variables.$mocha-yellow};
		--syntax-message-error: #{variables.$mocha-red};
		--syntax-json-keys: #{variables.$mocha-blue};
		--syntax-json-key-surrounding-quotes: #{variables.$mocha-overlay-2};
		--syntax-yaml-unquoted-keys: #{variables.$mocha-blue};
		--syntax-yaml-anchor-or-reference: #{variables.$mocha-yellow};
		--syntax-python-double-underscore-functions: #{variables.$mocha-sky};
		--syntax-javadoc-or-jsdoc: #{variables.$mocha-mauve};
		--syntax-toml-datetime: #{variables.$mocha-pink};
		--syntax-toml-table-name: #{variables.$mocha-yellow};
	}
}

:not(pre) > code {
	color: var(--syntax-color);
	background-color: var(--syntax-background-color);
	border-radius: 5px;
	padding: 1px 5px;
}

pre {
  padding: 10px;
  overflow: auto;
	tab-size: 2;
	border-radius: 5px;
}

// Base sytle
.z-code {
	color: var(--syntax-color);
	background-color: var(--syntax-background-color);
}

// No style
.z-none {
	color: var(--syntax-color);
	font-weight: initial;
	font-style: initial;
}

// Comments
.z-comment {
	color: var(--syntax-comment);
	font-weight: initial;
	font-style: italic;
}

// Shebangs
.z-comment.z-line.z-shebang.z-shell, .z-constant.z-language.z-shebang {
	color: var(--syntax-shebang);
	font-weight: initial;
	font-style: italic;
}

// Strings
.z-string {
	color: var(--syntax-string);
	font-weight: initial;
	font-style: initial;
}

// String regexes
.z-string.z-regexp {
	color: var(--syntax-string-regexp);
	font-weight: initial;
	font-style: initial;
}

// Numbers
.z-constant.z-numeric {
	color: var(--syntax-numeric);
	font-weight: initial;
	font-style: initial;
}

// Booleans
.z-constant.z-language.z-boolean {
	color: var(--syntax-boolean);
	font-weight: bold;
	font-style: italic;
}

// Built-in constants
.z-constant.z-language {
	color: var(--syntax-built-in-constant);
	font-weight: initial;
	font-style: italic;
}

// Built-in functions
.z-support.z-function.z-builtin {
	color: var(--syntax-built-in-function);
	font-weight: initial;
	font-style: italic;
}

// User-defined constant
.z-variable.z-other.z-constant, .z-entity.z-name.z-constant {
	color: var(--syntax-user-defined-constant);
	font-weight: initial;
	font-style: initial;
}

// Symbols
.z-constant.z-other.z-symbol {
	color: var(--syntax-symbol);
	font-weight: initial;
	font-style: initial;
}

// Keyword
.z-keyword {
	color: var(--syntax-keyword);
	font-weight: initial;
	font-style: italic;
}

// Conditional or loop
.z-keyword.z-control.z-loop, .z-keyword.z-control.z-conditional {
	color: var(--syntax-conditional-or-loop);
	font-weight: bold;
	font-style: initial;
}

// Returns
.z-keyword.z-control.z-return, .z-keyword.z-control.z-flow.z-return {
	color: var(--syntax-return);
	font-weight: bold;
	font-style: initial;
}

// Variable declarations
.z-keyword.z-declaration {
	color: var(--syntax-variable-declaration);
	font-weight: initial;
	font-style: italic;
}

// Class declarations
.z-keyword.z-declaration.z-class {
	color: var(--syntax-class-declaration);
	font-weight: initial;
	font-style: italic;
}

// Function declarations
.z-keyword.z-declaration.z-function {
	color: var(--syntax-function-declaration);
	font-weight: initial;
	font-style: italic;
}

// C++ directive
.z-keyword.z-control.z-import.z-c\+\+, .z-keyword.z-control.z-import.z-define.z-c\+\+, .z-keyword.z-control.z-import.z-include.z-c\+\+, .z-keyword.z-control.z-import.z-include.z-c {
	color: var(--syntax-c-plus-plus-directive);
	font-weight: initial;
	font-style: initial;
}

// C# type or variable declaration keywords
.z-storage.z-type.z-delegate, .z-storage.z-type.z-variable {
	color: var(--syntax-c-sharp-type-or-variable-declaration-keywords);
	font-weight: initial;
	font-style: initial;
}

// Exceptions
.z-support.z-type.z-exception {
	color: var(--syntax-exception);
	font-weight: initial;
	font-style: italic;
}

// Keyword operators
.z-keyword.z-operator.z-word {
	color: var(--syntax-keyword-operator);
	font-weight: initial;
	font-style: initial;
}

// Operators
.z-punctuation.z-accessor, .z-keyword.z-operator {
	color: var(--syntax-operator);
	font-weight: initial;
	font-style: initial;
}

// Punctuation separators
.z-punctuation.z-separator:not(.z-punctuation.z-separator.z-path) {
	color: var(--syntax-punctuation-separator);
	font-weight: initial;
	font-style: initial;
}

// Punctuation terminators
.z-punctuation.z-terminator {
	color: var(--syntax-punctuation-terminator);
	font-weight: initial;
	font-style: initial;
}

// Punctuation brackets
.z-punctuation.z-section {
	color: var(--syntax-punctuation-bracket);
	font-weight: initial;
	font-style: initial;
}

// Imports or includes
.z-keyword.z-control.z-import, .z-keyword.z-control.z-import.z-include {
	color: var(--syntax-import-or-include);
	font-weight: initial;
	font-style: italic;
}

// Storages
.z-storage {
	color: var(--syntax-storage);
	font-weight: initial;
	font-style: initial;
}

// Storage types
.z-storage.z-type {
	color: var(--syntax-storage-type);
	font-weight: initial;
	font-style: italic;
}

// Storage modifiers
.z-storage.z-modifier {
	color: var(--syntax-storage-modifier);
	font-weight: initial;
	font-style: initial;
}

// Storage type namespaces
.z-entity.z-name.z-namespace {
	color: var(--syntax-storage-type-namespace);
	font-weight: initial;
	font-style: italic;
}

// Storage type classes
.z-storage.z-type.z-class {
	color: var(--syntax-storage-type-class);
	font-weight: initial;
	font-style: italic;
}

// Labels
.z-entity.z-name.z-label {
	color: var(--syntax-label);
	font-weight: initial;
	font-style: initial;
}

// Class names
.z-entity.z-name.z-class, .z-meta.z-toc-list.z-full-identifier {
	color: var(--syntax-class-name);
	font-weight: initial;
	font-style: initial;
}

// Function names
.z-entity.z-name.z-function, .z-variable.z-function, .z-support.z-function {
	color: var(--syntax-function-name);
	font-weight: initial;
	font-style: italic;
}

// Function macros
.z-entity.z-name.z-function.z-preprocessor {
	color: var(--syntax-function-macro);
	font-weight: initial;
	font-style: initial;
}

// Library constants
.z-support.z-constant {
	color: var(--syntax-library-constant);
	font-weight: initial;
	font-style: initial;
}

// Class or type identifiers
.z-support.z-type, .z-support.z-class, .z-entity.z-name.z-type, .z-entity.z-name.z-struct, .z-entity.z-name.z-impl, .z-entity.z-name.z-trait, .z-entity.z-name.z-union, .z-meta.z-enum, .z-entity.z-other.z-inherited-class, .z-variable.z-other.z-member.z-delegate.z-cs {
	color: var(--syntax-class-or-type-identifier);
	font-weight: initial;
	font-style: italic;
}

// Builtin types
.z-storage.z-type.z-primitive, .z-support.z-type.z-primitive, .z-support.z-type.z-builtin, .z-storage.z-type.z-c, .z-storage.z-type.z-cs, .z-support.z-type.z-python {
	color: var(--syntax-builtin-type);
	font-weight: initial;
	font-style: initial;
}

// Library variables
.z-support.z-other.z-variable {
	color: var(--syntax-library-variable);
	font-weight: initial;
	font-style: initial;
}

// Unquoted keys
.z-meta.z-mapping.z-key .z-string.z-unquoted {
	color: var(--syntax-unquoted-keys);
	font-weight: initial;
	font-style: initial;
}

// Variable parameters
.z-variable.z-parameter, .z-variable.z-parameter.z-function {
	color: var(--syntax-variable-parameter);
	font-weight: initial;
	font-style: italic;
}

// Variable fields
.z-variable.z-other.z-member {
	color: var(--syntax-variable-field);
	font-weight: initial;
	font-style: initial;
}

// Variable language (builtins)
.z-variable.z-language {
	color: var(--syntax-variable-language-bultin);
	font-weight: initial;
	font-style: initial;
}

// Annotation (decorators)
.z-variable.z-annotation, .z-punctuation.z-definition.z-annotation {
	color: var(--syntax-annotation-decorator);
	font-weight: initial;
	font-style: initial;
}

// C or Rust attributes
.z-variable.z-annotation.z-rust, .z-variable.z-annotation.z-cs, .z-punctuation.z-definition.z-annotation.z-rust {
	color: var(--syntax-c-or-rust-attribute);
	font-weight: initial;
	font-style: initial;
}

// Python variable identifiers
.z-meta.z-generic-name {
	color: var(--syntax-python-variable-identifier);
	font-weight: initial;
	font-style: initial;
}

// Python docstrings
.z-source.z-python .z-comment.z-block.z-documentation {
	color: var(--syntax-python-docstring);
	font-weight: initial;
	font-style: initial;
}

// Tag names
.z-entity.z-name.z-tag {
	color: var(--syntax-tag-name);
	font-weight: initial;
	font-style: initial;
}

// Tag attributes
.z-entity.z-other.z-attribute-name {
	color: var(--syntax-tag-attribute);
	font-weight: initial;
	font-style: italic;
}

// Tag delimiters and attribute key or value separators
.z-punctuation.z-definition.z-tag, .z-punctuation.z-separator.z-key-value {
	color: var(--syntax-tag-delimiters-and-attribute-key-or-value-separators);
	font-weight: initial;
	font-style: initial;
}

// Markdown URLs
.z-markup.z-underline.z-link {
	color: var(--syntax-markdown-url);
	font-weight: initial;
	font-style: italic;
	text-decoration: underline;
}

// Markdown references
.z-meta.z-link.z-inline.z-description, .z-meta.z-image.z-inline.z-description {
	color: var(--syntax-markdown-reference);
	font-weight: initial;
	font-style: initial;
}

// Markdown raw code
.z-markup.z-raw.z-code-fence {
	color: var(--syntax-markdown-raw-code);
	font-weight: initial;
	font-style: initial;
}

// Markdown inline code
.z-markup.z-raw.z-inline {
	color: var(--syntax-markdown-inline-code);
	font-weight: initial;
	font-style: initial;
}

// Markdown code fence definitions
.z-meta.z-code-fence.z-definition {
	color: var(--syntax-markdown-code-fence-definition);
	font-weight: initial;
	font-style: italic;
}

// Markdown code fence definition languages
.z-constant.z-other.z-language-name.z-markdown {
	color: var(--syntax-markdown-code-fence-definition-language);
	font-weight: initial;
	font-style: italic;
}

// Markdown heading 1
.z-markup.z-heading.z-1 {
	color: var(--syntax-markdown-heading-1);
	font-weight: initial;
	font-style: initial;
}

// Markdown heading 2
.z-markup.z-heading.z-2 {
	color: var(--syntax-markdown-heading-2);
	font-weight: initial;
	font-style: initial;
}

// Markdown heading 3
.z-markup.z-heading.z-3 {
	color: var(--syntax-markdown-heading-3);
	font-weight: initial;
	font-style: initial;
}

// Markdown heading 4
.z-markup.z-heading.z-4 {
	color: var(--syntax-markdown-heading-4);
	font-weight: initial;
	font-style: initial;
}

// Markdown heading 5
.z-markup.z-heading.z-5 {
	color: var(--syntax-markdown-heading-5);
	font-weight: initial;
	font-style: initial;
}

// Markdown heading 6
.z-markup.z-heading.z-6 {
	color: var(--syntax-markdown-heading-6);
	font-weight: initial;
	font-style: initial;
}

// Markdown emphases
.z-markup.z-italic {
	color: var(--syntax-markdown-emphasis);
	font-weight: initial;
	font-style: italic;
}

// Markdown strongs
.z-markup.z-bold {
	color: var(--syntax-markdown-strong);
	font-weight: bold;
	font-style: initial;
}

// Escapes
.z-constant.z-character.z-escape {
	color: var(--syntax-escape);
	font-weight: initial;
	font-style: initial;
}

// Bash builtin functions
.z-meta.z-function-call.z-identifier.z-shell .z-support.z-function {
	color: var(--syntax-bash-builtin-function);
	font-weight: initial;
	font-style: initial;
}

// Bash parameters
.z-variable.z-language.z-shell {
	color: var(--syntax-bash-parameter);
	font-weight: initial;
	font-style: italic;
}

// Lua fields
.z-source.z-lua .z-meta.z-function.z-lua .z-meta.z-block.z-lua .z-meta.z-mapping.z-value.z-lua .z-meta.z-mapping.z-key.z-lua .z-string.z-unquoted.z-key.z-lua {
	color: var(--syntax-lua-field);
	font-weight: initial;
	font-style: italic;
}

// Lua constructors
.z-source.z-lua .z-meta.z-function.z-lua .z-meta.z-block.z-lua .z-meta.z-mapping.z-key.z-lua .z-string.z-unquoted.z-key.z-lua {
	color: var(--syntax-lua-constructor);
	font-weight: initial;
	font-style: initial;
}

// Java constants
.z-entity.z-name.z-constant.z-java {
	color: var(--syntax-java-constant);
	font-weight: initial;
	font-style: initial;
}

// Java void keywords
.z-storage.z-type.z-void.z-java {
	color: var(--syntax-java-void-keyword);
	font-weight: initial;
	font-style: initial;
}

// CSS properties
.z-support.z-type.z-property-name.z-css, .z-meta.z-property-name.z-css .z-entity.z-other.z-custom-property.z-css {
	color: var(--syntax-css-property);
	font-weight: initial;
	font-style: italic;
}

// CSS property vendor prefixes
.z-support.z-type.z-vendor-prefix.z-css {
	color: var(--syntax-css-property-vendor-prefix);
	font-weight: initial;
	font-style: italic;
}

// CSS variable usages
.z-variable.z-other.z-custom-property.z-css {
	color: var(--syntax-css-variable-usage);
	font-weight: initial;
	font-style: italic;
}

// CSS var functions
.z-support.z-function.z-var.z-css {
	color: var(--syntax-css-var-function);
	font-weight: initial;
	font-style: italic;
}

// CSS constants
.z-support.z-constant.z-property-value.z-css {
	color: var(--syntax-css-constant);
	font-weight: initial;
	font-style: initial;
}

// CSS unit suffixes
.z-constant.z-numeric.z-suffix.z-css, .z-keyword.z-other.z-unit.z-css {
	color: var(--syntax-css-unit-suffix);
	font-weight: initial;
	font-style: italic;
}

// SCSS tags
.z-entity.z-name.z-tag.z-css {
	color: var(--syntax-scss-tag);
	font-weight: initial;
	font-style: initial;
}

// Sass or SCSS variables
.z-variable.z-other.z-sass, .z-variable.z-other.z-scss {
	color: var(--syntax-sass-or-scss-variable);
	font-weight: initial;
	font-style: initial;
}

// SCSS mixins
.z-entity.z-name.z-mixin.z-scss, .z-variable.z-other.z-mixin.z-scss {
	color: var(--syntax-scss-mixin);
	font-weight: initial;
	font-style: initial;
}

// Rust macros
.z-support.z-macro.z-rust {
	color: var(--syntax-rust-macro);
	font-weight: initial;
	font-style: initial;
}

// Rust macro definition parameters
.z-meta.z-macro.z-rust .z-meta.z-macro.z-matchers.z-rust .z-variable.z-parameter.z-rust {
	color: var(--syntax-rust-macro-definition-parameters);
	font-weight: initial;
	font-style: initial;
}

// Generic or type parameter angle brackets
.z-punctuation.z-definition.z-generic {
	color: var(--syntax-generic-or-type-parameter-angle-brackets);
	font-weight: initial;
	font-style: initial;
}

// Invalid
.z-invalid {
	color: var(--syntax-invalid);
	background-color: var(--syntax-invalid-background);
	font-weight: initial;
	font-style: initial;
}

// Invalid deprecated
.z-invalid.z-deprecated {
	color: var(--syntax-invalid-deprecated);
	background-color: var(--syntax-invalid-deprecated-background);
	font-weight: initial;
	font-style: initial;
}

// Diff headers
.z-meta.z-diff, .z-meta.z-diff.z-header {
	color: var(--syntax-diff-header);
	font-weight: initial;
	font-style: initial;
}

// Diff deleted
.z-markup.z-deleted {
	color: var(--syntax-diff-deleted);
	font-weight: initial;
	font-style: initial;
}

// Diff inserted
.z-markup.z-inserted {
	color: var(--syntax-diff-inserted);
	font-weight: initial;
	font-style: initial;
}

// Diff changed
.z-markup.z-changed {
	color: var(--syntax-diff-changed);
	font-weight: initial;
	font-style: initial;
}

// Message errors
.z-message.z-error {
	color: var(--syntax-message-error);
	font-weight: initial;
	font-style: initial;
}

// JSON keys
.z-source.z-json .z-meta.z-mapping.z-key .z-string {
	color: var(--syntax-json-keys);
	font-weight: initial;
	font-style: initial;
}

// JSON key surrounding quotes
.z-source.z-json .z-meta.z-mapping.z-key .z-punctuation.z-definition.z-string.z-begin, .z-source.z-json .z-meta.z-mapping.z-key .z-punctuation.z-definition.z-string.z-end {
	color: var(--syntax-json-key-surrounding-quotes);
	font-weight: initial;
	font-style: initial;
}

// YAML unquoted keys
.z-source.z-yaml .z-meta.z-mapping.z-key .z-string.z-unquoted {
	color: var(--syntax-yaml-unquoted-keys);
	font-weight: initial;
	font-style: initial;
}

// YAML anchors or references
.z-variable.z-other.z-alias, .z-entity.z-name.z-other.z-alias {
	color: var(--syntax-yaml-anchor-or-reference);
	font-weight: initial;
	font-style: initial;
}

// Python double underscore functions
.z-support.z-function.z-magic.z-python {
	color: var(--syntax-python-double-underscore-functions);
	font-weight: initial;
	font-style: italic;
}

// Javadocs or JSDocs
.z-entity.z-name.z-tag.z-documentation, .z-entity.z-other.z-attribute-name.z-documentation.z-js {
	color: var(--syntax-javadoc-or-jsdoc);
	font-weight: initial;
	font-style: initial;
}

// TOML datetimes
.z-constant.z-other.z-datetime.z-toml {
	color: var(--syntax-toml-datetime);
	font-weight: initial;
	font-style: initial;
}

// TOML table names
.z-entity.z-name.z-table.z-toml {
	color: var(--syntax-toml-table-name);
	font-weight: initial;
	font-style: initial;
}
